function u0:0() -> i32 system_v {
    gv0 = symbol colocated userextname2
    sig0 = (i32) -> i32 system_v
    sig1 = () -> i32 system_v
    fn0 = u0:0 sig0
    fn1 = u0:1 sig1

block0:
    v0 = global_value.i64 gv0
    v1 = iadd_imm v0, 0x3a98
    v2 = load.i8 v1+1
    v3 = iadd_imm v2, 8
    store v3, v1+1
    v4 = load.i8 v1+1
    v5 = load.i8 v1
    v6 = imul_imm v4, 9
    v7 = iadd v5, v6
    store v7, v1
    v8 = iconst.i8 0
    store v8, v1+1  ; v8 = 0
    v9 = uload8.i32 v1
    v10 = call fn0(v9)
    v11 = load.i8 v1+1
    v12 = iadd_imm v11, 4
    store v12, v1+1
    v13 = load.i8 v1+1
    v14 = load.i8 v1
    v15 = imul_imm v13, 7
    v16 = iadd v14, v15
    store v16, v1
    v17 = iconst.i8 0
    store v17, v1+1  ; v17 = 0
    v18 = load.i8 v1
    v19 = iadd_imm v18, 1
    store v19, v1
    v20 = uload8.i32 v1
    v21 = call fn0(v20)
    v22 = load.i8 v1
    v23 = iadd_imm v22, 7
    store v23, v1
    v24 = uload8.i32 v1
    v25 = call fn0(v24)
    v26 = uload8.i32 v1
    v27 = call fn0(v26)
    v28 = load.i8 v1
    v29 = iadd_imm v28, 3
    store v29, v1
    v30 = uload8.i32 v1
    v31 = call fn0(v30)
    v32 = load.i8 v1+2
    v33 = iadd_imm v32, 6
    store v33, v1+2
    v34 = load.i8 v1+2
    v35 = load.i8 v1+1
    v36 = imul_imm v34, 7
    v37 = iadd v35, v36
    store v37, v1+1
    v38 = iconst.i8 0
    store v38, v1+2  ; v38 = 0
    v39 = load.i8 v1+1
    v40 = iadd_imm v39, 2
    store v40, v1+1
    v41 = iadd_imm v1, 1
    v42 = uload8.i32 v41
    v43 = call fn0(v42)
    v44 = load.i8 v41
    v45 = iadd_imm v44, -12
    store v45, v41
    v46 = uload8.i32 v41
    v47 = call fn0(v46)
    v48 = load.i8 v41+1
    v49 = iadd_imm v48, 6
    store v49, v41+1
    v50 = load.i8 v41+1
    v51 = load.i8 v41
    v52 = imul_imm v50, 9
    v53 = iadd v51, v52
    store v53, v41
    v54 = iconst.i8 0
    store v54, v41+1  ; v54 = 0
    v55 = load.i8 v41
    v56 = iadd_imm v55, 1
    store v56, v41
    v57 = uload8.i32 v41
    v58 = call fn0(v57)
    v59 = iadd_imm v41, -1
    v60 = uload8.i32 v59
    v61 = call fn0(v60)
    v62 = load.i8 v59
    v63 = iadd_imm v62, 3
    store v63, v59
    v64 = uload8.i32 v59
    v65 = call fn0(v64)
    v66 = load.i8 v59
    v67 = iadd_imm v66, -6
    store v67, v59
    v68 = uload8.i32 v59
    v69 = call fn0(v68)
    v70 = load.i8 v59
    v71 = iadd_imm v70, -8
    store v71, v59
    v72 = uload8.i32 v59
    v73 = call fn0(v72)
    v74 = load.i8 v59+3
    v75 = iadd_imm v74, 4
    store v75, v59+3
    v76 = load.i8 v59+3
    v77 = load.i8 v59+2
    v78 = imul_imm v76, 8
    v79 = iadd v77, v78
    store v79, v59+2
    v80 = iconst.i8 0
    store v80, v59+3  ; v80 = 0
    v81 = load.i8 v59+2
    v82 = iadd_imm v81, 1
    store v82, v59+2
    v83 = iadd_imm v59, 2
    v84 = uload8.i32 v83
    v85 = call fn0(v84)
    v86 = iconst.i32 0
    return v86  ; v86 = 0
}
