function u0:0() -> i32 system_v {
    gv0 = symbol colocated userextname2
    sig0 = (i32) -> i32 system_v
    sig1 = () -> i32 system_v
    fn0 = u0:0 sig0
    fn1 = u0:1 sig1

block0:
    v0 = global_value.i64 gv0
    v1 = iadd_imm v0, 0x3a98
    v2 = load.i8 v1+1
    v3 = iadd_imm v2, 8
    store v3, v1+1
    v4 = load.i8 v1+1
    v5 = load.i8 v1
    v6 = imul_imm v4, 9
    v7 = iadd v5, v6
    store v7, v1
    v8 = iconst.i8 0
    store v8, v1+1  ; v8 = 0
    v9 = uload8.i32 v1
    v10 = call fn0(v9)
    v11 = load.i8 v1+1
    v12 = iadd_imm v11, 4
    store v12, v1+1
    v13 = load.i8 v1+1
    v14 = load.i8 v1
    v15 = imul_imm v13, 7
    v16 = iadd v14, v15
    store v16, v1
    v17 = iconst.i8 0
    store v17, v1+1  ; v17 = 0
    v18 = load.i8 v1
    v19 = iadd_imm v18, 1
    store v19, v1
    v20 = uload8.i32 v1
    v21 = call fn0(v20)
    v22 = load.i8 v1
    v23 = iadd_imm v22, 7
    store v23, v1
    v24 = uload8.i32 v1
    v25 = call fn0(v24)
    v26 = uload8.i32 v1
    v27 = call fn0(v26)
    v28 = load.i8 v1
    v29 = iadd_imm v28, 3
    store v29, v1
    v30 = uload8.i32 v1
    v31 = call fn0(v30)
    v32 = load.i8 v1+2
    v33 = iadd_imm v32, 6
    store v33, v1+2
    v34 = load.i8 v1+2
    v35 = load.i8 v1+1
    v36 = imul_imm v34, 7
    v37 = iadd v35, v36
    store v37, v1+1
    v38 = iconst.i8 0
    store v38, v1+2  ; v38 = 0
    v39 = load.i8 v1+1
    v40 = iadd_imm v39, 2
    store v40, v1+1
    v41 = uload8.i32 v1+1
    v42 = call fn0(v41)
    v43 = load.i8 v1+1
    v44 = iadd_imm v43, -12
    store v44, v1+1
    v45 = uload8.i32 v1+1
    v46 = call fn0(v45)
    v47 = load.i8 v1+2
    v48 = iadd_imm v47, 6
    store v48, v1+2
    v49 = load.i8 v1+2
    v50 = load.i8 v1+1
    v51 = imul_imm v49, 9
    v52 = iadd v50, v51
    store v52, v1+1
    v53 = iconst.i8 0
    store v53, v1+2  ; v53 = 0
    v54 = load.i8 v1+1
    v55 = iadd_imm v54, 1
    store v55, v1+1
    v56 = uload8.i32 v1+1
    v57 = call fn0(v56)
    v58 = uload8.i32 v1
    v59 = call fn0(v58)
    v60 = load.i8 v1
    v61 = iadd_imm v60, 3
    store v61, v1
    v62 = uload8.i32 v1
    v63 = call fn0(v62)
    v64 = load.i8 v1
    v65 = iadd_imm v64, -6
    store v65, v1
    v66 = uload8.i32 v1
    v67 = call fn0(v66)
    v68 = load.i8 v1
    v69 = iadd_imm v68, -8
    store v69, v1
    v70 = uload8.i32 v1
    v71 = call fn0(v70)
    v72 = load.i8 v1+3
    v73 = iadd_imm v72, 4
    store v73, v1+3
    v74 = load.i8 v1+3
    v75 = load.i8 v1+2
    v76 = imul_imm v74, 8
    v77 = iadd v75, v76
    store v77, v1+2
    v78 = iconst.i8 0
    store v78, v1+3  ; v78 = 0
    v79 = load.i8 v1+2
    v80 = iadd_imm v79, 1
    store v80, v1+2
    v81 = uload8.i32 v1+2
    v82 = call fn0(v81)
    v83 = iadd_imm v1, 2
    v84 = iconst.i32 0
    return v84  ; v84 = 0
}
